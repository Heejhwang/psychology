# 설정
set.seed(2025)
num_trials <- 300
s <- 1.0

# posterior summary 불러오기
post <- read.table("posterior_summary_lba.txt", header = TRUE)

# 참가자 수 계산
N <- length(grep("^intercept\\[", rownames(post)))

# 파라미터 샘플링 함수 (mean ± sd 기반)
get_par <- function(name) {
  mean_vals <- post[grep(paste0("^", name, "\\["), rownames(post)), "mean"]
  sd_vals   <- post[grep(paste0("^", name, "\\["), rownames(post)), "sd"]
  return(mapply(function(mu, sigma) rnorm(1, mu, sigma), mean_vals, sd_vals))
}

# 참가자별 파라미터 샘플링
simul_pars <- data.frame(
  d         = get_par("d"),
  A         = get_par("A"),
  tau       = get_par("tau"),
  intercept = get_par("intercept"),
  slope     = get_par("slope"),
  subjID    = 1:N
)

# LBA 시뮬레이션 함수
simulate_lba <- function(A, b, v, s, tau) {
  drift <- rnorm(2, mean = v, sd = s)
  drift[drift <= 0] <- 1e-6  # 음수 방지
  start <- runif(2, 0, A)
  ttf <- (b - start) / drift
  choice <- which.min(ttf)
  rt <- ttf[choice] + tau
  return(list(rt = rt, choice = choice))
}

# trial-by-trial 데이터 생성
all_data <- NULL

for (i in 1:N) {
  pars <- simul_pars[i, ]
  d <- pars$d
  A <- pars$A
  tau <- pars$tau
  intercept <- pars$intercept
  slope <- pars$slope
  b <- A + d
  
  # 자극 정보
  subtlex <- rnorm(num_trials)  # 표준정규분포
  stim_type <- sample(1:2, num_trials, replace = TRUE)  # 1 = 자연물, 2 = 인공물
  
  for (t in 1:num_trials) {
    v_trial <- rep(1.0, 2)
    v_trial[stim_type[t]] <- intercept + slope * subtlex[t]
    
    sim <- simulate_lba(A, b, v_trial, s, tau)
    
    all_data <- rbind(all_data, data.frame(
      subjID = i,
      trial = t,
      rt = sim$rt,
      choice = sim$choice,
      stimulus_type = stim_type[t],
      subtlex = subtlex[t]
    ))
  }
}

# 결과 저장
write.table(all_data, file = "simulated_lba_data.txt", row.names = FALSE, sep = "\t")
write.table(simul_pars, file = "simulated_parameters_lba.txt", row.names = FALSE, sep = "\t")
